import { z } from "zod";

export const capsuleSchema = z.object({
  commentary: z
    .string()
    .describe(
      `Describe what you're about to do and the steps you want to take for generating the code capsule in detail.`
    ),
  template: z
    .string()
    .describe(`Name of the template used to generate the code capsule.`),
  title: z.string().describe(`Short title of the code capsule. Max 3 words`),
  description: z
    .string()
    .describe(`Short description of teh code capsule. Max 1 sentence.`),
  additional_dependencies: z
    .array(z.string())
    .describe(
      `Additional dependencies required by the code capsule. Do not include the dependencies that are already included in the template.`
    ),
  install_dependencies_command: z
    .string()
    .describe(
      `Command to install additional dependencies required by the code capsule.`
    ),
  port: z
    .number()
    .nullable()
    .describe(
      `Port number used by the resulted code capsule. Null when no ports are exposed`
    ),
  code: z
    .string()
    .describe(
      `Code generated by the code capsule. Only runnable code is allowed.`
    ),
  file_path: z
    .string()
    .describe(`Relative path to teh file, including the file name.`),
});

export type CapsuleSchema = z.infer<typeof capsuleSchema>;
